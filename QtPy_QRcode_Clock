
#include <U8g2lib.h>
#include <TinyGPS++.h>
//the line below specific to the OLED being used.  Replace F with 1 or 2 to reduce buffer size
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE);

#include "qrcode.h"
char time_string[32];
static const uint32_t GPSBaud = 9600;

TinyGPSPlus gps;

int gpschar; 

void setup() {
  u8g2.begin();  

  u8g2.setFont(u8g2_font_u8glib_4_tr);

  Serial1.begin(GPSBaud);

//Clear Screen
 u8g2.firstPage();
 do {

 } while ( u8g2.nextPage() );

 u8g2.setDrawColor(1);
}

void loop() {
  
  
  while (Serial1.available()>0)  /* Encode data read from GPS while data is available on serial port */
     {  gpschar = Serial1.read(); //read raw gps data to gpschar
       // Serial.write(gpschar);  // uncomment to send raw gps over Serial to debug
        gps.encode(gpschar);      // extract useful info from raw gps data
      }

    
     uint8_t hr_val, min_val, sec_val, hr_val_jp, sats_val;
     bool loc_valid, time_valid;
    
     hr_val = gps.time.hour(); /* Get hour */
     min_val = gps.time.minute();  /* Get minutes */
     sec_val = gps.time.second();  /* Get seconds */
     time_valid = gps.time.isValid();  /* Check if valid time data is available */
     

     if (hr_val < 15) { hr_val_jp = hr_val + 9;  // convert UTC to Japan time zone
     }
     else {hr_val_jp = hr_val -15;
     }

     
          char time_string[32];
          sprintf(time_string, "Time : %02d:%02d:%02d \n", hr_val_jp, min_val, sec_val);
              
 // Create the QR code
    QRCode qrcode;
    uint8_t qrcodeData[qrcode_getBufferSize(3)];
    qrcode_initText(&qrcode, qrcodeData, 3, HIGH, (time_string));

   u8g2.clearBuffer();
   for (uint8_t y = 0; y < qrcode.size; y++) {
        for (uint8_t x = 0; x < qrcode.size; x++) {
          if (qrcode_getModule(&qrcode,x,y)){
            uint8_t u = y*2;
            uint8_t v = x*2;
            u8g2.drawBox(u+30,v+3,2,2);
          }
        }

        
    }

    u8g2.sendBuffer();

}
